<script type = "text/javascript">

	function btnShow(value, metaData, record, rowIndex){
		var ret =  '<div align="center">'+
					'<a href="#" onclick="showProcesso(' + rowIndex + ')">'+
						'<img src="../images/show.png" title="Show" alt="Show" ></img>'+
					'</a>'+
				'</div>';
		return ret;
	}

	function btnDelete(value, metaData, record, rowIndex, colIndex, store){
		var ret =  '<div align="center">'+
					'<a href="#" onclick="deleteProcesso(' + rowIndex + ')">'+
						'<img src="../images/Recycle_empty.png" title="Delete" alt="Delete" ></img>'+
					'</a>'+
				'</div>';
		return ret;
	}

	function linkShow(value, metaData, record, rowIndex, colIndex, store){
		return '<div><a href="#" onclick="editProcesso(' + rowIndex + ')">' + value + '</a></div>';
	}

	function editProcesso(idx){
		var id = store_Processos.getAt(idx).get('id');
		var name = store_Processos.getAt(idx).get('name');
		addSubTab('tab_processos', 'sub_tab_processos_edit_'+id, 'Editing ' + name, '/processos/edit/' + id, 'editIcon');
	}

	function deleteProcesso(r){
		var id = store_Processos.getAt(r).get('id');
		var name = store_Processos.getAt(r).get('name');
		Ext.Msg.confirm('Delete ', 'Confirm delete processo: ' + name, function(btn) {
		    if (btn == 'yes') {
				Ext.Ajax.request({
		          url: 'processos/destroy/'+id,
		          success: function(result, req){
		                var response = Ext.util.JSON.decode(result.responseText);
						if(response.msg){
				            Ext.Msg.alert('Warning', response.msg);
			            }else{
			      			updateSubTab('tab_processos', 'sub_tab_processos', 'List', '<%= processos_path %>');
			      			closeSubTab('tab_processos', 'sub_tab_processos_edit_' + id);
			      			closeSubTab('tab_processos', 'sub_tab_processos_show_' + id);
					    }
		          },
		          failure: function() {
		            Ext.Msg.alert('Error','There was a problem while processing this request');
		          }
				});
		    }
		  });
	}

	function showProcesso(r){
		var id = store_Processos.getAt(r).get('id');
		var name = store_Processos.getAt(r).get('name');
		addSubTab('tab_processos', 'sub_tab_processos_show_'+id, 'Showing ' + name, '/processos/show/' + id, 'showIcon');
	}

	function newProcesso(){
		addSubTab('tab_processos', 'sub_tab_processos_new', 'New processo', '<%= url_for(:action => "new") %>', 'newIcon');
	}

	var store_Processos = createStore(
		'<%= url_for(:controller => "processos", :action => "store", :id => "grid") %>',
		['id', 'nome', 'codigo', 'tipo', 'descricao', 'detalhes'],
		[{name: 'id'},{name: 'nome'},{name: 'codigo'},{name: 'tipo'},{name: 'descricao'},{name: 'detalhes'}]
	);

	var pBar = createPBar(store_Processos, 'processos');

	<%= include_buttons_processos %>
	var btnsProcessos = createProcessosBtns();
	var cmdBar = createCmdBar(btnsProcessos);
	var cols =
		[
       		{header: 'Nome', dataIndex: 'nome', sortable: true, renderer: linkShow, width: 220},
      		{header: 'Codigo', dataIndex: 'codigo', sortable: true, width: 220},
      		{header: 'Tipo', dataIndex: 'tipo', sortable: true, width: 220},
      		{header: 'Descricao', dataIndex: 'descricao', sortable: true, width: 220},
      		{id: 'edit', dataIndex: 'edit', renderer: btnShow, width: 40},
      		{id: 'delete', dataIndex: 'delete', renderer: btnDelete, width: 40}
  		];

  	var grid_Processos = createGrid(store_Processos, 'Lista de Processos', cmdBar, pBar, cols);
	store_Processos.load({params: {start:0 , limit:10}});
	grid_Processos.render('processos_index_grid_content');

</script>

<div id = "processos_index_grid_content">
  	<!-- AREA TO RENDER GRID  -->
</div>
